name: "Docker CD"
description: "Docker build, push to registry and invoke Portainer service webhook."

inputs:
  image_tag:
    description: "Docker image tag (e.g. 'falcondev/falcon-portal-api')"
    required: true
  registry_url:
    description: "Docker registry URL"
    required: true
  registry_username:
    description: "Docker registry username"
    required: true
  registry_token:
    description: "Docker registry token"
    required: true
  dockerfile:
    description: "Dockerfile path"
    required: true
  context:
    description: "Build context path"
    required: false
  build-args:
    description: "Docker build arguments"
  service_webhook_url:
    description: "Portainer service webhook URL"

runs:
  using: "composite"
  steps:
    - name: Login to registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry_url }}
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_token }}

    - name: Setup Docker context
      run: docker context create builders
      shell: bash

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        endpoint: builders

    - name: Cache Docker Buildx cache
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: buildx-cache-${{ runner.os }}

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        load: true
        tags: ${{ inputs.registry_url }}/${{ inputs.image_tag }}
        context: ${{ inputs.context || '.' }}
        file: ${{ inputs.dockerfile }}
        build-args: ${{ inputs.build-args }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        
    # Temp fix
    # https://github.com/docker/build-push-action/issues/252
    # https://github.com/moby/buildkit/issues/1896
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      shell: bash

    - name: Push to registry
      run: docker push ${{ inputs.registry_url }}/${{ inputs.image_tag }}
      shell: bash

    - name: Invoke deployment hook
      if: inputs.service_webhook_url
      run: curl --silent --show-error --dump-header - --fail -X POST ${{ inputs.service_webhook_url }}
      shell: bash
